# Code generated by river.codegen. DO NOT EDIT.
from collections.abc import AsyncIterable, AsyncIterator
import datetime
from typing import (
    Any,
    Literal,
    Mapping,
    NotRequired,
    TypedDict,
)
from typing_extensions import Annotated

from pydantic import BaseModel, Field, TypeAdapter, WrapValidator
from replit_river.error_schema import RiverError
from replit_river.client import (
    RiverUnknownError,
    translate_unknown_error,
    RiverUnknownValue,
    translate_unknown_value,
)

import replit_river as river


class OpendocumentInput(BaseModel):
    path: str


class OpendocumentOutput(BaseModel):
    pass


OpendocumentOutputTypeAdapter: TypeAdapter[OpendocumentOutput] = TypeAdapter(
    OpendocumentOutput
)


class OpendocumentErrors(RiverError):
    pass


OpendocumentErrorsTypeAdapter: TypeAdapter[OpendocumentErrors] = TypeAdapter(
    OpendocumentErrors
)


OpendocumentInputTypeAdapter: TypeAdapter[OpendocumentInput] = TypeAdapter(
    OpendocumentInput
)

# Code generated by river.codegen. DO NOT EDIT.
from collections.abc import AsyncIterable, AsyncIterator
from typing import Any
import datetime

from pydantic import TypeAdapter

from replit_river.error_schema import RiverError, RiverErrorTypeAdapter
import replit_river as river


from .init import (
    InitErrors,
    InitErrorsTypeAdapter,
    InitInit,
    InitInput,
    InitOutput,
    InitOutputTypeAdapter,
    encode_InitInit,
    encode_InitInput,
    encode_InitInputOneOf_sshToken0,
    encode_InitInputOneOf_sshToken1,
)


class ReplspaceapiService:
    def __init__(self, client: river.Client[Any]):
        self.client = client

    async def init(
        self,
        init: InitInit,
        inputStream: AsyncIterable[InitInput],
    ) -> AsyncIterator[InitOutput | InitErrors | RiverError]:
        return self.client.send_stream(
            "replspaceApi",
            "init",
            init,
            inputStream,
            encode_InitInit,
            encode_InitInput,
            lambda x: InitOutputTypeAdapter.validate_python(
                x  # type: ignore[arg-type]
            ),
            lambda x: InitErrorsTypeAdapter.validate_python(
                x  # type: ignore[arg-type]
            ),
        )
